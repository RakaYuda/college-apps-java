/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import controller.DosenJpaController;
import controller.FakultasJpaController;
import controller.MahasiswaJpaController;
import javax.swing.JTable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Dosen;
import model.Mahasiswa;
import model.Fakultas;

/**
 *
 * @author raka
 */
public class FormMahasiswa extends javax.swing.JFrame {
    
    DefaultTableModel model;
    List<Mahasiswa> listMahasiswa;
    
    List<Dosen> listDosen;
    List<Fakultas> listFakultas;
    
    EntityManagerFactory objFactory = Persistence.createEntityManagerFactory("college-appsPU");
    MahasiswaJpaController jpaMahasiswa = new MahasiswaJpaController(objFactory);
    
    DosenJpaController jpaDosen = new DosenJpaController(objFactory);
    FakultasJpaController jpaFakultas = new FakultasJpaController(objFactory);
    /**
     * Creates new form FormMahasiswa
     */
    public FormMahasiswa() {
        initComponents();
        String[] tblHead = {"Nim","Nama","Angkatan","Sekolah Asal", "Dosen Pembimbing", "Fakultas"};
        model = new DefaultTableModel(tblHead, 0);
        tblMahasiswa.setModel(model);
        listMahasiswa = jpaMahasiswa.findMahasiswaEntities();
        showData(model);
        
        
        listDosen = jpaDosen.findDosenEntities();
        DefaultComboBoxModel cbModelDosen = (DefaultComboBoxModel)cbDosen.getModel();
        
        for(Dosen dosen: listDosen){
            cbModelDosen.addElement(dosen.getNama());
        }
        
        listFakultas = jpaFakultas.findFakultasEntities();
        DefaultComboBoxModel cbModelFakultas  = (DefaultComboBoxModel)this.cbFakultas.getModel();
        
        for(Fakultas fakultas: listFakultas){
            cbModelFakultas.addElement(fakultas.getNama());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("college-appsPU").createEntityManager();
        mahasiswaQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mahasiswa m");
        mahasiswaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mahasiswaQuery.getResultList();
        mahasiswaQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mahasiswa m");
        mahasiswaList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mahasiswaQuery1.getResultList();
        mahasiswaQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mahasiswa m");
        mahasiswaList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mahasiswaQuery2.getResultList();
        mahasiswaQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mahasiswa m");
        mahasiswaList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mahasiswaQuery3.getResultList();
        dosenQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM Dosen d");
        dosenList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dosenQuery.getResultList();
        dosenQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM Dosen d");
        dosenList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dosenQuery1.getResultList();
        fakultasQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT f FROM Fakultas f");
        fakultasList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : fakultasQuery.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        tfAngkatan = new javax.swing.JTextField();
        tfSekolah = new javax.swing.JTextField();
        tfNim = new javax.swing.JTextField();
        btnInput = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMahasiswa = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbDosen = new javax.swing.JComboBox<>();
        cbFakultas = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Form Mahasiswa");

        jLabel2.setText("NIM");

        jLabel3.setText("Nama");

        jLabel4.setText("Angkatan");

        jLabel5.setText("Sekolah Asal");

        tfNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaActionPerformed(evt);
            }
        });

        btnInput.setText("Input");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblMahasiswa.setColumnSelectionAllowed(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mahasiswaList, tblMahasiswa);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nim}"));
        columnBinding.setColumnName("Nim");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nama}"));
        columnBinding.setColumnName("Nama");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${angkatan}"));
        columnBinding.setColumnName("Angkatan");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sekolahAsal}"));
        columnBinding.setColumnName("Sekolah Asal");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        tblMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMahasiswa);
        tblMahasiswa.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel6.setText("Dosen Pembimbing");

        jLabel7.setText("Nama Fakultas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(78, 78, 78)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnInput)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnUpdate)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnDelete)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(cbFakultas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(78, 78, 78))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(0, 0, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfAngkatan)
                                            .addComponent(tfNama)
                                            .addComponent(tfSekolah)
                                            .addComponent(cbDosen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tfNim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(70, 70, 70)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfAngkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfSekolah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbDosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbFakultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInput)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        // TODO add your handling code here:
       
        Mahasiswa mhs = new Mahasiswa();
        mhs = getDataForm();
        try {
            jpaMahasiswa.create(mhs);
            listMahasiswa = jpaMahasiswa.findMahasiswaEntities();
            resetForm();
            showData(model);
        } catch (Exception ex) {
            Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInputActionPerformed

    private void tblMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMahasiswaMouseClicked
        // TODO add your handling code here:
        int index = tblMahasiswa.getSelectedRow();
        TableModel model = tblMahasiswa.getModel();
        Long nim = Long.parseLong(model.getValueAt(index,0).toString());
        Mahasiswa mhs = new Mahasiswa();
        try {
            mhs = jpaMahasiswa.findMahasiswa(nim);
            showDataToForm(mhs);
        } catch (Exception ex) {
            Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tblMahasiswaMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String nim = JOptionPane.showInputDialog("Masukkan NIM");
        
        try {
            jpaMahasiswa.destroy(Long.parseLong(nim));
            listMahasiswa = jpaMahasiswa.findMahasiswaEntities();
            resetForm();
            showData(model);
            JOptionPane.showMessageDialog(this, "Berhasil menghapus data dengan NIM: " + nim);
        } catch (Exception ex) {
            Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Mahasiswa mhs = new Mahasiswa();
        mhs = getDataForm();
        try {
            jpaMahasiswa.edit(mhs);
            listMahasiswa = jpaMahasiswa.findMahasiswaEntities();
            resetForm();
            showData(model);
        } catch (Exception ex) {
            Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMahasiswa().setVisible(true);
            }
        });
        
    }
    
    public void showData(DefaultTableModel model)
    {   
        model.setRowCount(0);
        for(Mahasiswa mhs:listMahasiswa)
        {   
            model.addRow(new Object[]{mhs.getNim(), mhs.getNama(), mhs.getAngkatan(), mhs.getSekolahAsal(), mhs.getDosenPembimbing(), mhs.getFakultas()});
        }   
    }
    
    public void resetForm()
    {
        tfNim.setText("");
        tfNama.setText("");
        tfAngkatan.setText("");
        tfSekolah.setText("");
    }
    
    public void showDataToForm(Mahasiswa mhs)
    {
        tfNim.setText(mhs.getNim().toString());
        tfNama.setText(mhs.getNama());
        tfAngkatan.setText(mhs.getAngkatan().toString());
        tfSekolah.setText(mhs.getSekolahAsal());
        cbDosen.setSelectedIndex(listDosen.indexOf(mhs.getDosenPembimbing()));
        cbFakultas.setSelectedIndex(listFakultas.indexOf(mhs.getFakultas()));
        
    }
    
    public Mahasiswa getDataForm(){
        Mahasiswa mhs = new Mahasiswa();
        mhs.setNim(Long.parseLong(tfNim.getText()));
        mhs.setNama(tfNama.getText());
        mhs.setAngkatan(Integer.parseInt(tfAngkatan.getText()));
        mhs.setSekolahAsal(tfSekolah.getText());
        
        mhs.setDosenPembimbing(listDosen.get(cbDosen.getSelectedIndex()));
        mhs.setFakultas(listFakultas.get(cbFakultas.getSelectedIndex()));
        
        return mhs;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbDosen;
    private javax.swing.JComboBox<String> cbFakultas;
    private java.util.List<model.Dosen> dosenList;
    private java.util.List<model.Dosen> dosenList1;
    private javax.persistence.Query dosenQuery;
    private javax.persistence.Query dosenQuery1;
    private javax.persistence.EntityManager entityManager;
    private java.util.List<model.Fakultas> fakultasList;
    private javax.persistence.Query fakultasQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private java.util.List<model.Mahasiswa> mahasiswaList;
    private java.util.List<model.Mahasiswa> mahasiswaList1;
    private java.util.List<model.Mahasiswa> mahasiswaList2;
    private java.util.List<model.Mahasiswa> mahasiswaList3;
    private javax.persistence.Query mahasiswaQuery;
    private javax.persistence.Query mahasiswaQuery1;
    private javax.persistence.Query mahasiswaQuery2;
    private javax.persistence.Query mahasiswaQuery3;
    private javax.swing.JTable tblMahasiswa;
    private javax.swing.JTextField tfAngkatan;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNim;
    private javax.swing.JTextField tfSekolah;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
